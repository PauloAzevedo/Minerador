/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ehrickwilliam.gui;

import br.com.ehrickwilliam.bibliotecas.Leitor;
import br.com.ehrickwilliam.bibliotecas.Util;
import br.com.ehrickwilliam.conexao.Conexao;
import br.com.ehrickwilliam.conexao.HibernateConfiguration;
import br.com.ehrickwilliam.conexao.TransactionManager;
import br.com.ehrickwilliam.daos.DaoIssues;
import br.com.ehrickwilliam.daos.DaoUsuario;
import br.com.ehrickwilliam.model.Issue;
import br.com.ehrickwilliam.model.Usuario;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;

/**
 *
 * @author Erick
 */
public class JDialogImportantoIssues extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCadastroClienteFisico
     *
     * @param parent
     * @param modal
     */
    private List<Usuario> usuarios;
    private Leitor leitor;
    private Connection conexao;

    public JDialogImportantoIssues(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        executar(jButtonExecutar);
        jButtonExecutar.setVisible(false);
        jProgressBar.setIndeterminate(true);
        this.setTitle("Importando Issues...");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelstatus = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jButtonExecutar = new javax.swing.JButton();
        jLabelstatus1 = new javax.swing.JLabel();
        jLabelEtapa = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(443, 185));
        setModal(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelstatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelstatus.setText("Processo iniciado!");
        getContentPane().add(jLabelstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));
        getContentPane().add(jProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 380, 20));

        jButtonExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecutarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, -1, -1));

        jLabelstatus1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelstatus1.setText("Por favor, aguarde...");
        getContentPane().add(jLabelstatus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));
        getContentPane().add(jLabelEtapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecutarActionPerformed
        retornoConsulta();
        this.dispose();
    }//GEN-LAST:event_jButtonExecutarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExecutar;
    private javax.swing.JLabel jLabelEtapa;
    private javax.swing.JLabel jLabelstatus;
    private javax.swing.JLabel jLabelstatus1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    public void retornoConsulta() {
        HibernateConfiguration.setBase("minerador");
        usuarios = new DaoUsuario().listar("", "id");
        jProgressBar.setIndeterminate(false);
        jProgressBar.setMaximum(usuarios.size());
        jProgressBar.setStringPainted(true);
        jProgressBar.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        for (Usuario usuario : usuarios) {

            jLabelstatus.setText("Inserindo issues do usu√°rio" + usuario.getConta().getEmail() + " ");
            HibernateConfiguration.setBase("bicho");

            try {

                TransactionManager.beginTransaction();
                HibernateConfiguration.setBase("bicho");
                String consulta = "SELECT issues.issue, issues.submitted_on AS submittedOn,(SELECT email FROM people "
                        + "WHERE people.id= issues.assigned_to) AS assigned, issues_ext_bugzilla.component "
                        + "AS component  FROM issues,people, issues_ext_bugzilla where submitted_by = people.id "
                        + "AND people.email = '" + usuario.getConta().getEmail() + "' AND issues.id = issues_ext_bugzilla.issue_id;";

                conexao = Conexao.getConnection();
                conexao.createStatement().execute("use " + HibernateConfiguration.getBase());
                ResultSet executeQuery = conexao.createStatement().executeQuery(consulta);

                while (executeQuery.next()) {
                    HibernateConfiguration.setBase("minerador");
                    List<Usuario> obterPorEmail = new DaoUsuario().obterPorEmail(executeQuery.getString("assigned"));
                    Issue issue = new Issue(usuario, obterPorEmail.get(0), Integer.parseInt(executeQuery.getString("issue")), Util.DateToCalendar(executeQuery.getDate("submittedOn")), executeQuery.getString("component"));
                    new DaoIssues().persistir2(issue);

                }
                TransactionManager.commit();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
            jProgressBar.setValue(jProgressBar.getValue() + 1);
        }
    }

    public static void executar(final JButton botao) {
        new Thread() {
            @Override
            public void run() {
                int flag = 0;
                while (flag == 0) {

                    botao.doClick();
                    flag = +1;

                }
            }
        }.start();

    }
}
